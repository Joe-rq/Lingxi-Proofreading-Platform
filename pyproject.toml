[project]
name = "lingxi-proofreading-platform"
version = "1.0.0"
description = "一个强大、灵活且可扩展的在线文本校对平台"
authors = [
    {name = "Lingxi Team"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["proofreading", "ai", "text-correction", "flask"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Flask",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "Flask==2.3.3",
    "Flask-SQLAlchemy==3.0.5",
    "Flask-Migrate==4.0.5",
    "Flask-Login==0.6.3",
    "Werkzeug==2.3.7",
    "cryptography==41.0.4",
    "openai==1.3.0",
    "google-generativeai==0.3.0",
    "requests==2.31.0",
    "python-dotenv==1.0.0",
    "gunicorn==21.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
]

[project.urls]
Homepage = "https://github.com/your-username/lingxi-proofreading-platform"
Documentation = "https://github.com/your-username/lingxi-proofreading-platform#readme"
Repository = "https://github.com/your-username/lingxi-proofreading-platform.git"
Issues = "https://github.com/your-username/lingxi-proofreading-platform/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["ai_services"]
include = [
    "*.py",
    "templates/**/*",
    "static/**/*",
]

[tool.uv]
dev-dependencies = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
] 